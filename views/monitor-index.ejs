<!doctype html>
<html lang="en">
  <head>
    <!-- Required meta tags -->
    <meta charset="utf-8">
    <meta name="viewport" content="width=device-width, initial-scale=1">

    <!-- Bootstrap CSS -->
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.0.0-beta3/dist/css/bootstrap.min.css" rel="stylesheet" integrity="sha384-eOJMYsd53ii+scO/bJGFsiCZc+5NDVN2yr8+0RDqr0Ql0h+rP48ckxlpbzKgwra6" crossorigin="anonymous">

    <title>WebMonitor</title>
    
    <style type="text/css">
    @import url('https://webmonitor-dev.kerus.net/assets/vendors/noto-serif-kr/apply.css');
    * {
      font-family: 'Noto Serif KR';
    }
      .class_INIT { background: #ffffff; }
      .class_RUNNING { background: #fdffbc; }
      .class_RUNNING_RETRY { background: #e4bad4; }
      .class_PARSING { background: #d5ecc2; }
      .class_ALERTING { background: #a7c5eb; }
      .class_ALERTEDWAIT { background: #faf2f2; }
      .class_ENDED { background: #fabea7; }
      .class_STOPPED { background: #ff7171; }
      /* STOPPED = ERROR */
      
      .a_operate { color: blue; text-decoration: none; }
      
      .container div.alert {
        margin-top: 10px;
        margin-bottom: 10px;
      }

      .t_mepath {
        font-size: 11px;
        text-overflow: ellipsis;
        overflow: hidden;
white-space: nowrap;
      }
      
      #mytable tr {
        height: 50px;
      }
    </style>
  </head>
  <body>

      <nav id="header_nav" class="navbar navbar-expand-lg navbar-light" style="background-color: #e3f2fd;">
      <div class="container container-fluid">
        <a class="navbar-brand" href="/" onclick="location.reload()">Webmonitor</a>
        <button class="navbar-toggler" type="button" data-bs-toggle="collapse" data-bs-target="#navbarNavAltMarkup" aria-controls="navbarNavAltMarkup" aria-expanded="false" aria-label="Toggle navigation">
          <span class="navbar-toggler-icon"></span>
        </button>
        <div class="collapse navbar-collapse" id="navbarNavAltMarkup">
          <div class="navbar-nav">
            <!-- <a class="nav-link active" aria-current="page" href="#">Home</a> -->
            <a class="nav-link" href="/admin/addtask">Add Monitor</a>
            <!-- <a class="nav-link disabled" href="#" tabindex="-1" aria-disabled="true">Disabled</a> -->
          </div>
        </div>
      </div>
    </nav>
    
    <div class="container">
      
       <div class="alert alert-danger" role="alert">
        개발자가 일을 안합니다
      </div>
      
      <table id="mytable" class="table">
      <thead>
        <tr>
          <th width="2%" scope="col">#</th>
          <th width="5%" scope="col">Monitor Name</th>
          <th width="10%" scope="col">WebPath</th>
          <th width="10%" scope="col">State</th>
          <th scope="col">Start Time (Due)</th>
          <th scope="col">Time Remain</th>
          <th scope="col">Operate</th>
          <th scope="col">Last Data (Omit)</th>
        </tr>
      </thead>
      <tbody id="table_monitorList">
        <% 
          Object.keys(monitors).forEach(function(i){ 
            monitor = monitors[i]
        %> 

        <tr>
          <th scope="row"><%= monitor.id %></th>
          <td><%= monitor.monitorName %></td>
          <td>[<%= monitor.webMethod %>] <%= monitor.webPath %></td>
          <td><%= monitor.state %></td>
          <td><%= monitor.state %></td>
          <td><%= monitor.state %></td>
          <td>START | RESTART | STOP</td>
          <td><%= monitor.state %></td>
        </tr>
        
        <% }) %>
  
      </tbody>
    </table>
    
    </div>
    
    
    <div class="modal" tabindex="-1" role="dialog" id="operationModal">
      <div class="modal-dialog" role="document">
        <div class="modal-content">
          <div class="modal-header">
            <h5 class="modal-title">Confirm</h5>
            <button type="button" class="close operationModal_btn_close" data-dismiss="modal" aria-label="Close">
              <span aria-hidden="true">&times;</span>
            </button>
          </div>
          <div class="modal-body">
            <p>작업을 수행합니다.</p>
          </div>
          <div class="modal-footer">
            <button type="button" class="btn btn-primary operationModal_btn_run">YES</button>
            <button type="button" class="btn btn-secondary operationModal_btn_close" data-dismiss="modal">NO</button>
          </div>
        </div>
      </div>
    </div>
    

    <script src="https://cdn.jsdelivr.net/npm/@popperjs/core@2.9.1/dist/umd/popper.min.js" integrity="sha384-SR1sx49pcuLnqZUnnPwx6FCym0wLsk5JZuNx2bPPENzswTNFaQU1RDvt3wT4gWFG" crossorigin="anonymous"></script>
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.0.0-beta3/dist/js/bootstrap.min.js" integrity="sha384-j0CNLUeiqtyaRmlzUHCPZ+Gy5fQu0dQ6eZ/xAww941Ai1SxSY+0EQqNXNE6DZiVc" crossorigin="anonymous"></script>
    <script src="https://cdn.jsdelivr.net/npm/jquery@3.6.0/dist/jquery.min.js"></script>
    <script src="/assets/js/common.js"></script>
    <script>
    const browserLists = [];
    let modalOperation = null;
    const reloadLists = () => {
      return new Promise((resolve, reject) => {
        $.ajax({
          dataType: "json",
          url: '/task/lists',
          success: (data, textStatus) => {
            console.log(data);
            
            const monitors = data.monitors;
            
            $('#table_monitorList').empty();
            
            Object.keys(monitors).forEach(id => {
              
              const monitor = monitors[id];
              
              const stateClass = 'class_' + monitor.state;
              const startTime = new Date(monitor.startTime);
              const startTimeString = `${startTime.yyyymmdd()} ${startTime.hhmmss()}`;
              let dueTimeString   = Math.floor((new Date().getTime() - monitor.startTime) / 1000) + 's';
              let remainTimeTaskString = '-';
              
              if (monitor.state === 'READY' || monitor.state === 'ALERTEDWAIT' || monitor.state === 'RUNNING_RETRY') {
                const x = Math.floor((monitor.nextStartTime - new Date().getTime()) / 1000);
                remainTimeTaskString = x > 0 ? x + 's' : '0s';
              }
              
              let afterStateString = '';
              if (monitor.state == 'RUNNING' || monitor.state === 'PARSING') {
                remainTimeTaskString = `<div class="spinner-border m-10" role="status">
  <span class="visually-hidden">Loading...</span>
</div>`;
              }
              
              let row = `<tr id="monitor_${monitor.monitorID}" class="${stateClass}">`;
                  row += `<td scope="row" class="t_id">${monitor.monitorID}</td>`; 
                  row += `<td class="t_name">${monitor.monitorName}</td>`;
                  row += `<td class="t_mepath">[${monitor.webMethod}] ${monitor.webPath}</td>`;
                  row += `<td class="t_state">${monitor.state}</td>`;
                  row += `<td class="t_due">${startTimeString}</td>`;
                  row += `<td class="t_remain">${remainTimeTaskString}</td>`;
                  row += `<td class="t_op">`;
                  row += `<a href="" class="a_operate" data-monitorid="${monitor.monitorID}" data-operation="START">START</a> | `;
                  row += `<a href="" class="a_operate" data-monitorid="${monitor.monitorID}" data-operation="RESTART">RESTART</a> | `;
                  row += `<a href="" class="a_operate" data-monitorid="${monitor.monitorID}" data-operation="STOP">STOP</a>`;
                  //| RESTART | STOP</td>`;
                  row += '</td>';
                  row += `<td class="t_lastdata">${monitor.lastConditionInformation.length ? monitor.lastConditionInformation[0].value : '-'}</td>`;
                  
              
              $('#table_monitorList').append(row);
              
              $('.a_operate').on('click', event => {
                event.preventDefault();
                event.stopPropagation();
                event.stopImmediatePropagation();

                const monitorID = event.target.getAttribute('data-monitorid');
                const operation = event.target.getAttribute('data-operation');
                
                modalOperation = {
                  type: 'POST',
                  dataType: "json",
                  data: {
                    id: monitorID
                  },
                  url: '/task/' + operation.toLowerCase(),
                  success: (data, textStatus) => {
                    if (data.status !== 1) {
                      alert(data.message);
                    } else {
                      reloadLists().then().catch();
                    }
                  }
                }
                
                console.log(monitorID, operation);
                
                $('#operationModal').modal('show');

                $('.operationModal_btn_run').on('click', e => {
                  $.ajax(modalOperation);
                  $('#operationModal').modal('hide');
                })
                
                $('.operationModal_btn_close').on('click', e => {
                  $('#operationModal').modal('hide');
                })
                
              });
              
            });
            
            
    
            
            resolve();
          }
        });
      });
    }
  
    $.when( $.ready ).then(function() {

      (async() => {
      
        
        while(true) {
          await reloadLists();
          await wait(500);
        }
        
      })();
     
       
    });
    </script>
  </body>
</html>