<!doctype html>
<html lang="en">
	<head>
		<!-- Required meta tags -->
		<meta charset="utf-8">
		<meta name="viewport" content="width=device-width, initial-scale=1">
		<!-- Bootstrap CSS -->
		<link href="https://cdn.jsdelivr.net/npm/bootstrap@5.0.0-beta3/dist/css/bootstrap.min.css" rel="stylesheet" integrity="sha384-eOJMYsd53ii+scO/bJGFsiCZc+5NDVN2yr8+0RDqr0Ql0h+rP48ckxlpbzKgwra6" crossorigin="anonymous">
		<title>WebMonitor</title>
		<style type="text/css">
			@import url('https://webmonitor-dev.kerus.net/assets/vendors/noto-serif-kr/apply.css');
			* {
			font-family: 'Noto Serif KR';
			}
			.container div.alert {
			margin-top: 10px;
			margin-bottom: 10px;
			}
			.my-margin { 
			margin-top: 5px;
			margin-bottom: 5px;
			}
			button.microbutton {
			font-size: 0.8em;
			}
			.shortpadding>* {
			padding-left: 3px;
			padding-right: 3px;
			font-size: 0.8em;
			}
		</style>
	</head>
	<body>
		<nav id="header_nav" class="navbar navbar-expand-lg navbar-light" style="background-color: #e3f2fd;">
			<div class="container container-fluid">
				<a class="navbar-brand" href="/" onclick="location.reload()">Webmonitor</a>
				<button class="navbar-toggler" type="button" data-bs-toggle="collapse" data-bs-target="#navbarNavAltMarkup" aria-controls="navbarNavAltMarkup" aria-expanded="false" aria-label="Toggle navigation">
				<span class="navbar-toggler-icon"></span>
				</button>
				<div class="collapse navbar-collapse" id="navbarNavAltMarkup">
					<div class="navbar-nav">
						<!-- <a class="nav-link active" aria-current="page" href="#">Home</a> -->
						<a class="nav-link active" href="/admin/addtask">Add Monitor</a>
						<!-- <a class="nav-link disabled" href="#" tabindex="-1" aria-disabled="true">Disabled</a> -->
					</div>
				</div>
			</div>
		</nav>
		<div class="container">
			<div class="alert alert-danger" role="alert">
				개발자가 일을 안합니다
			</div>
			<select id="loadPreset" name="loadPreset" class="form-select form-select-sm" aria-label=".form-select-sm example">
				<option selected value="">Preset Load</option>
				<option value="K-POST">K-POST</option>
			</select>
			<form onsubmit="formSubmit(); return false;">
				<div class="col">
					<input name="input_monitorName" type="text" class="form-control fs-1" placeholder="Monitor 신규작성" aria-label="모니터 이름" style="border: none">
				</div>
				<div class="col">
					<input name="input_description" type="text" class="form-control fs-5" placeholder="설명" aria-label="설명" style="border: none">
				</div>
				<div class="row my-margin">
					<div class="col">
						<div class="row mb-3">
							<label class="col-sm-2 col-form-label">REQ METHOD</label>
							<div class="col-sm-10">
								<select name="input_webMethod" class="form-select form-select-sm" aria-label=".form-select-sm example">
									<option selected value="GET">GET</option>
									<option value="POST">POST</option>
								</select>
							</div>
						</div>
						<div class="row mb-3">
							<label for="input_webPath" class="col-sm-2 col-form-label">PATH</label>
							<div class="col-sm-10">
								<input name="input_webPath" type="text" class="form-control" placeholder="https://..." aria-label="https://...">
							</div>
						</div>
						<div class="row mb-3">
							<div class="col-sm-2">
								<label for="" class="col-form-label">HEADER</label>
								<button class="btn btn-primary microbutton" type="button" id="button_add_header_row">+</button>
								<button class="btn btn-primary microbutton" type="button" id="button_delete_header_row">-</button>
							</div>
							<div id="frame_header" class="col-sm-10">
								<div class="duplicateFrame row">
									<div class="col-sm-5">
										<input name="input_customHeaderKey[]" type="text" class="form-control" placeholder="Cookie" aria-label="Cookie">
									</div>
									<div class="col-sm-5">
										<input name="input_customHeader[]" type="text" class="form-control" placeholder="ddd=dfafda;" aria-label="ddd=dfafda;">
									</div>
								</div>
							</div>
						</div>
						<div class="row mb-3">
							<div class="col-sm-2">
								<label for="" class="col-form-label">BODY</label>
							</div>
							<div class="col-sm-10">
								<input name="input_customBody" type="text" class="form-control" placeholder="ddd=dfafda;" aria-label="ddd=dfafda;">
							</div>
						</div>
						<!-- DETECT CONDITION -->
						<div class="row mb-3" style="border-top: 1px solid #dedede; padding-top:15px;">
							<div class="col-sm-2">
								<label for="input_webPath" class="col-form-label">DETECT</label>
							</div>
							<div class="col-sm-10">
								<select id="input_detectMethod" name="input_detectMethod" class="form-select form-select-sm" aria-label=".form-select-sm example">
									<option selected value="">Detect DataChange</option>
									<option value="regex-match">regex match</option>
									<option value="regex">regex extract</option>
									<option value="json-exist">json key exist</option>
									<option value="json">json</option>
								</select>
							</div>
						</div>
						<div class="row mb-3">
							<div class="col-sm-2">
								<label for="input_webPath" class="col-form-label">DETECT DETAIL</label>
								<button class="btn btn-primary microbutton" type="button" id="button_add_regex_row">+</button>
								<button class="btn btn-primary microbutton" type="button" id="button_remove_regex_row">-</button>
								<label for="input_condition_multiplematch" class="col-form-label">M MATCH</label>
								<select name="input_condition_multiplematch" class="form-select form-select-sm" aria-label=".form-select-sm example">
									<option selected value="AND">AND</option>
									<option value="OR">OR</option>
								</select>
							</div>
							<div class="col-sm-10">
								<div id="frame_regex-match" style="display: none;">
									<input name="input_regex_match" type="text" class="form-control" placeholder="regex expression (.*)" aria-label="regex expression (.*)">
								</div>
								<div id="frame_regex" class="row shortpadding" style="display: none;">
									<div class="duplicateFrame">
										<div class="col-sm-4">
											<input name="input_regex_expression[]" type="text" class="form-control" placeholder="regex expression (.*)" aria-label="regex expression (.*)">
										</div>
										<div class="col-sm-1">
											<input name="input_regex_index[]" type="text" class="form-control" placeholder="i" aria-label="i">
										</div>
										<div class="col-sm-2">
											<select name="input_regex_operator[]" class="form-select form-select-sm" aria-label=".form-select-sm example">
												<option selected value="">Op</option>
												<option value="=">=</option>
												<option value="!=">!=</option>
												<option value=">">&gt;</option>
												<option value=">=">&gt;=</option>
												<option value="<">&lt;</option>
												<option value="<=">&lt;=</option>
												<option value="$">$</option>
												<option value="@">@</option>
											</select>
										</div>
										<div class="col-sm-3">
											<input name="input_regex_compare_value[]" type="text" class="form-control" placeholder="target value" aria-label="value">
										</div>
										<div class="col-sm-2">
											<input name="input_regex_name[]" type="text" class="form-control" placeholder="name" aria-label="name">
										</div>
									</div>
								</div>
								<div id="frame_json-exist" style="display: none;">
									<input name="input_json_exist" type="text" class="form-control" placeholder="json.key" aria-label="json.key">
								</div>
								<div id="frame_json" class="row shortpadding"  style="display: none;">
									<div class="duplicateFrame">
										<div class="col-sm-5">
											<input name="input_json_key[]" type="text" class="form-control" placeholder="json.key" aria-label="json.key">
										</div>
										<div class="col-sm-2">
											<select name="input_json_operator[]" class="form-select form-select-sm" aria-label=".form-select-sm example">
												<option selected value="">Op</option>
												<option value="=">=</option>
												<option value="!=">!=</option>
												<option value=">">&gt;</option>
												<option value=">=">&gt;=</option>
												<option value="<">&lt;</option>
												<option value="<=">&lt;=</option>
												<option value="$">$</option>
												<option value="@">@</option>
											</select>
										</div>
										<div class="col-sm-3">
											<input name="input_json_compare_value[]" type="text" class="form-control" placeholder="target value" aria-label="value">
										</div>
										<div class="col-sm-2">
											<input name="input_json_name[]" type="text" class="form-control" placeholder="name" aria-label="name">
										</div>
									</div>
								</div>
							</div>
						</div>
						<!-- END CONDITION -->
						<div class="row mb-3" style="border-top: 1px solid #dedede; padding-top:15px;">
							<div class="col-sm-2">
								<label for="input_webPath" class="col-form-label">END DETECT</label>
							</div>
							<div class="col-sm-10">
								<select id="input_endMethod" name="input_endMethod" class="form-select form-select-sm" aria-label=".form-select-sm example">
									<option selected value="">NO</option>
									<option value="regex">regex extract</option>
									<option value="json">json</option>
								</select>
							</div>
						</div>
						<div class="row mb-3" id="frame_enddetect_detail" style="display: block">
							<div class="col-sm-2">
								<label for="input_webPath" class="col-form-label">DETAIL</label>
								<button class="btn btn-primary microbutton" type="button" id="button_add_endregex_row">+</button>
								<button class="btn btn-primary microbutton" type="button" id="button_remove_endregex_row">-</button>
								<label for="input_endcondition_multiplematch" class="col-form-label">M MATCH</label>
								<select name="input_endcondition_multiplematch" class="form-select form-select-sm" aria-label=".form-select-sm example">
									<option selected value="AND">AND</option>
									<option value="OR">OR</option>
								</select>
							</div>
							<div class="col-sm-10">
								<div id="frame_endregex" class="row shortpadding" style="display: none;">
									<div class="duplicateFrame">
										<div class="col-sm-4">
											<input name="input_endregex_expression[]" type="text" class="form-control" placeholder="regex expression (.*)" aria-label="regex expression (.*)">
										</div>
										<div class="col-sm-1">
											<input name="input_endregex_index[]" type="text" class="form-control" placeholder="i" aria-label="i">
										</div>
										<div class="col-sm-2">
											<select name="input_endregex_operator[]" class="form-select form-select-sm" aria-label=".form-select-sm example">
												<option selected value="">Op</option>
												<option value="=">=</option>
												<option value="!=">!=</option>
												<option value=">">&gt;</option>
												<option value=">=">&gt;=</option>
												<option value="<">&lt;</option>
												<option value="<=">&lt;=</option>
												<option value="$">$</option>
												<option value="@">@</option>
											</select>
										</div>
										<div class="col-sm-3">
											<input name="input_endregex_compare_value[]" type="text" class="form-control" placeholder="target value" aria-label="value">
										</div>
										<div class="col-sm-2">
											<input name="input_endregex_name[]" type="text" class="form-control" placeholder="name" aria-label="name">
										</div>
									</div>
								</div>
								<div id="frame_endjson" class="row shortpadding"  style="display: none;">
									<div class="duplicateFrame">
										<div class="col-sm-5">
											<input name="input_endjson_key[]" type="text" class="form-control" placeholder="json.key" aria-label="json.key">
										</div>
										<div class="col-sm-2">
											<select name="input_endjson_operator[]" class="form-select form-select-sm" aria-label=".form-select-sm example">
												<option selected value="">Op</option>
												<option value="=">=</option>
												<option value="!=">!=</option>
												<option value=">">&gt;</option>
												<option value=">=">&gt;=</option>
												<option value="<">&lt;</option>
												<option value="<=">&lt;=</option>
												<option value="$">$</option>
												<option value="@">@</option>
											</select>
										</div>
										<div class="col-sm-3">
											<input name="input_endjson_compare_value[]" type="text" class="form-control" placeholder="target value" aria-label="value">
										</div>
										<div class="col-sm-2">
											<input name="input_endjson_name[]" type="text" class="form-control" placeholder="name" aria-label="name">
										</div>
									</div>
								</div>
							</div>
						</div>
						<!-- END CONDITION // ------->
					</div>
					<div class="col">
						<div class="row">
							<div class="col-sm-3">
								<label for="input_interval" class="col-form-label">동작주기</label>
							</div>
							<div class="col-sm-2">
								<input name="input_interval" type="text" class="form-control form-inline" placeholder="60" aria-label="60" value="60">
							</div>
							<div class="col-sm-3">
								초
							</div>
						</div>
						<div class="row">
							<div class="col-sm-3">
								<label for="input_reAlertInterval" class="col-form-label">알림 후 대기시간</label>
							</div>
							<div class="col-sm-2">
								<input name="input_reAlertInterval" type="text" class="form-control form-inline" placeholder="x5" aria-label="x5" value="x5">
							</div>
							<div class="col-sm-3">
								초
							</div>
						</div>
						<div class="row">
							<div class="col-sm-3">요청실패재시작주기</div>
							<div class="col-sm-2">
								<input name="input_retryInterval" type="text" class="form-control form-inline" placeholder="x5" aria-label="x5" value="x5">
							</div>
							<div class="col-sm-3">
								초
							</div>
						</div>
						<div class="row">
							<div class="col-sm-3">
								<label for="" class="col-form-label">요청오류알림</label>
							</div>
							<div class="col-sm-1">
								<div class="form-check form-switch">
									<input class="form-check-input" type="checkbox" name="input_set_webErrorAlert">
									<label class="form-check-label"></label>
								</div>
								
							</div>
						</div>
						<div class="row">
							<div class="col-sm-3">
								<label for="" class="col-form-label">감지알림후종료</label>
							</div>
							<div class="col-sm-3">
								<div class="form-check form-switch">
									<input class="form-check-input" type="checkbox" name="input_set_endWithDetection">
									<label class="form-check-label" ></label>
								</div>
							</div>
						</div>
						<div class="row">
							REGEX TESTER
							<input id="input_testyourregex" type="text" placeholder="regex expresion (.*)">
							<textarea id="input_testyourregex_text"></textarea>
							<button id="regexTester" type="button">check</button>
							<div id="text_regextestresult" style="overflow-y: scroll; max-height: 100px;"></div>
						</div>
						
						<!-- -->
						<div class="row">
							Evaluation PREPROCESS
							<textarea name="input_evaluationPreprocess" style="font-size: 12px; font-family: monospace; height: 200px" onkeydown="if(event.keyCode===9){var v=this.value,s=this.selectionStart,e=this.selectionEnd;this.value=v.substring(0, s)+'  '+v.substring(e);this.selectionStart=this.selectionEnd=s+2;return false;}">
//								
// Return Status
// 0: PROCESS.CONTINUE
// 1: PROCESS.OK
// 2: PROCESS.ERROR
// Usable Variables : webObject.webPath, webObject.webCustomHeader, webObject.webCustomBody

return PROCESS.OK;</textarea>
							<div id="text_regextestresult" style="overflow-y: scroll; max-height: 100px;"></div>
						</div>
						
						<!-- -->
						<!-- -->
						<div class="row">
							Evaluation POSTPROCESS
							<textarea name="input_evaluationPostprocess" style="font-size: 12px; font-family: monospace; height: 200px" onkeydown="if(event.keyCode===9){var v=this.value,s=this.selectionStart,e=this.selectionEnd;this.value=v.substring(0, s)+'  '+v.substring(e);this.selectionStart=this.selectionEnd=s+2;return false;}">
//								
// Return Status
// 0: PROCESS.CONTINUE
// 1: PROCESS.OK
// 2: PROCESS.ERROR
// 3: PROCESS.END
// 4: PROCESS.ALERT
// Usable Variables : web.lastData, web.lastConditionInformation, web.evaluationData, web.params
// -- String: web.lastData = 'UP';
// -- Regex : CAN'T USE
// -- JSON  : 

return PROCESS.OK;</textarea>
							<div id="text_regextestresult" style="overflow-y: scroll; max-height: 100px;"></div>
						</div>
						
						<!-- -->
						<div class="row mb-3">
							<div class="col-sm-2">
								<label for="" class="col-form-label">PARAMS</label>
								<button class="btn btn-primary microbutton" type="button" id="button_add_params_row">+</button>
								<button class="btn btn-primary microbutton" type="button" id="button_delete_params_row">-</button>
							</div>
							<div id="frame_params" class="col-sm-10">
								<div class="duplicateFrame row">
									<div class="col-sm-10">
										<input name="input_params[]" type="text" class="form-control" placeholder="param or tag value" aria-label="para oro tag value">
									</div>
								</div>
							</div>
						</div>
						
					</div>
				</div>
				<div class="mb-3">
				</div>
				<div class="mb-3">
				</div>
				<div class="mb-3 form-check">
				</div>
				<button type="submit" class="btn btn-primary" style="float: right">Submit</button>
			</form>
		</div>
		<script src="https://cdn.jsdelivr.net/npm/@popperjs/core@2.9.1/dist/umd/popper.min.js" integrity="sha384-SR1sx49pcuLnqZUnnPwx6FCym0wLsk5JZuNx2bPPENzswTNFaQU1RDvt3wT4gWFG" crossorigin="anonymous"></script>
		<script src="https://cdn.jsdelivr.net/npm/bootstrap@5.0.0-beta3/dist/js/bootstrap.min.js" integrity="sha384-j0CNLUeiqtyaRmlzUHCPZ+Gy5fQu0dQ6eZ/xAww941Ai1SxSY+0EQqNXNE6DZiVc" crossorigin="anonymous"></script>
		<script src="https://cdn.jsdelivr.net/npm/jquery@3.6.0/dist/jquery.min.js"></script>
		<script src="/assets/js/common.js"></script>
		<script>
			const browserLists = [];
			
			const formSubmit = () => {
			  
			  $.ajax({
			    type: 'POST',
			    url: '/task/assign',
			    data: $('form').serialize(),
			    success: (data, textStatus) => {
			      
			      console.log(data);
			      
			      if (data.status === 1) {
			        location.href = '/';
			      } else {
			        alert(data.message);
			      }
			      
			    },
			    dataType: 'json'
			  });
			  
			}
			
			$.when( $.ready ).then(function() {
			
			  (async() => {
			    $('#regexTester').click(() => {
			    	try {
			    		const newRegex = new RegExp($('#input_testyourregex').val());
			    		const testRegex = newRegex.exec($('#input_testyourregex_text').val());
			    		if (testRegex) {
			    			let checks = '<pre>';
			    			for (let i = 0; i < testRegex.length; i++) {
			    				checks += `<p> ${i} : ${testRegex[i]} </p>`;
			    			}
			    			checks += '</pre>';
			    			$('#text_regextestresult').html(checks);
			    		} else {
			    			$('#text_regextestresult').html('not found');
			    		}
			    	} catch (e) {
			    	 	$('#text_regextestresult').html(e.message);
			    	}
			    });
			
			
			    $('#input_detectMethod').change(e => {
			    	const frameList = ['regex-match', 'regex', 'json-exist', 'json'];
			    
			    	frameList.forEach(name => {
			    
			    		if ($(`#frame_${name}`)) {

			    			if (name === e.target.value) {

			    				$(`#frame_${name}`).css('display', 'flex');
			    				$(`#frame_${name}`).css('width', '100%');
			    				$(`#frame_${name}`).css('font-size', '0.8em');
			    
			    
			    				if ($(`#frame_${name} .duplicateFrame`)) {
			    					$(`#frame_${name} .duplicateFrame`).addClass('row');
			    					$(`#frame_${name} .duplicateFrame`).addClass('shortpadding');
			    				}
			    
			    			} else {
			    			  $(`#frame_${name}`).css('display', 'none');
			    			}
			    			
			    		}
			    
			    	});
			    
			    });
			    
			    
			    $('#input_endMethod').change(e => {
			    	const frameList = ['regex', 'json'];
			    
			      let selectValidate = false;
			    
			    	frameList.forEach(name => {
			    
			    		if ($(`#frame_end${name}`)) {
			    
			    			if (name === e.target.value) {
			    				$(`#frame_end${name}`).css('display', 'flex');
			    				$(`#frame_end${name}`).css('width', '100%');
			    				$(`#frame_end${name}`).css('font-size', '0.8em');
			    
			    
			    				if ($(`#frame_end${name} .duplicateFrame`)) {
			    					$(`#frame_end${name} .duplicateFrame`).addClass('row');
			    					$(`#frame_end${name} .duplicateFrame`).addClass('shortpadding');
			    					selectValidate = true;
			    				}
			    
			    			} else {
			    			  $(`#frame_end${name}`).css('display', 'none');  
			    			}
			    			
			    		}
			    
			    	});
			    	
			    	if (selectValidate) {
			    	  $('#frame_enddetect_detail').css('display', 'flex');
			    	} else {
			    	  $('#frame_enddetect_detail').css('display', 'none');
			    	}
			    
			    });
			    
			    
			    $('#button_add_regex_row').click(e => {
			      const allowedList = ['regex', 'json'];
			      const currentSelect = $('#input_detectMethod').val();
			      
			      if (allowedList.indexOf(currentSelect) !== -1) {
			        const gx = $(`#frame_${currentSelect} .duplicateFrame`);
			        $(`#frame_${currentSelect}`).append(gx[0].outerHTML);
			      } else {
			        alert('X');
			      }
			      
			    });
			    
			    $('#button_add_endregex_row').click(e => {
			      const allowedList = ['regex', 'json'];
			      const currentSelect = $('#input_endMethod').val();

			      if (allowedList.indexOf(currentSelect) !== -1) {
			        const gx = $(`#frame_end${currentSelect} .duplicateFrame`);
			        $(`#frame_end${currentSelect}`).append(gx[0].outerHTML);
			      } else {
			        alert('X');
			      }
			      
			    });
			    
			    $('#button_add_header_row').click(e => {
			      const gx = $(`#frame_header .duplicateFrame`);
			      $(`#frame_header`).append(gx[0].outerHTML);
			    });
			    
			    $('#button_add_params_row').click(e => {
			      const gx = $(`#frame_params .duplicateFrame`);
			      $(`#frame_params`).append(gx[0].outerHTML);
			    });
			    
			    $('input[name=input_set_endWithDetection]').change(e => {
			      if ($('input[name=input_set_endWithDetection]').is(':checked')) {
			    	$('input[name=input_reAlertInterval]').prop('disabled', true);	
			      } else {
			      	$('input[name=input_reAlertInterval]').prop('disabled', false);
			      }
			    })
			
			  })();
			   
			});
		</script>
	</body>
</html>
